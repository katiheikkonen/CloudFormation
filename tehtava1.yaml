AWSTemplateFormatVersion: 2010-09-09
Description: Kati Demo tehtava1

Parameters:
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  ApplicationPort:
    Type: Number
    Default: 80
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro

Resources:
  Katinampari:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: katin-cloudformation-ampari

  KatinSQS:
      Type: AWS::SQS::Queue
      Properties:
        QueueName : Katinjono

#  KatinEC2:
#    Type: AWS::EC2::Instance
#    Properties:
#      ImageId: !Ref LatestAmiId
#      KeyName: kati-demo
#      InstanceType: !Ref InstanceTypeParameter
#      SecurityGroupIds:
#        - !Ref InstanceSG
#      Tags:
#        - Key: Name
#          Value: kati-ec2
#        - Key: Owner
#          Value: Kati

  KatinALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: KatinALB
      Scheme: internet-facing
      SecurityGroups:
        - !Ref LoadbalancerSG
      Subnets:
        - !GetAtt KatiNestedStack.Outputs.KatiSubnetId1
        - !GetAtt KatiNestedStack.Outputs.KatiSubnetId2
        - !GetAtt KatiNestedStack.Outputs.KatiSubnetId3
      Tags:
        - Key: Owner
          Value: Kati
      Type: application

  InstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for EC2
      GroupName: Kati-Instance-SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ApplicationPort
          ToPort: !Ref ApplicationPort
          SourceSecurityGroupId: !Ref LoadbalancerSG
      Tags:
        - Key: Owner
          Value: Kati
      VpcId: !GetAtt KatiNestedStack.Outputs.KatiVPCId

  LoadbalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for ALB
      GroupName: Kati-loadbalancer-SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ApplicationPort
          ToPort: !Ref ApplicationPort
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Owner
          Value: Kati
      VpcId: !GetAtt KatiNestedStack.Outputs.KatiVPCId

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref KatinALB
      Port: 80
      Protocol: HTTP

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: kati-alb-targetgroup
      Port: 80
      Protocol: HTTP
      VpcId: !GetAtt KatiNestedStack.Outputs.KatiVPCId
      Tags:
        - Key: Owner
          Value: Kati

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: kati.asg
      VPCZoneIdentifier:
        - !GetAtt KatiNestedStack.Outputs.KatiSubnetId1
        - !GetAtt KatiNestedStack.Outputs.KatiSubnetId2
        - !GetAtt KatiNestedStack.Outputs.KatiSubnetId3
      LaunchConfigurationName: !Ref LaunchConfigKati
      MaxSize: 3
      MinSize: 1
      DesiredCapacity: 2
      TargetGroupARNs:
        - !Ref TargetGroup

  LaunchConfigKati:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceTypeParameter
      SecurityGroups:
        - !Ref InstanceSG
      KeyName: kati-demo
      UserData:
        Fn::Base64:
          Fn::Join:
            - "\n"
            - - "#!/bin/bash"
              - "amazon-linux-extras install epel"
              - "amazon-linux-extras install nginx1"
              - "systemctl start nginx"

  KatiNestedStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Tags:
        - Key: Name
          Value: katistack
        - Key: Owner
          Value: Kati
      TemplateURL: https://kati-bucket-cloudformation.s3.amazonaws.com/tehtava2.yaml

Outputs:
  KatinloadbalancerDNSName:
    Description: The DNS name of the application load balancer
    Value: !GetAtt KatinALB.DNSName